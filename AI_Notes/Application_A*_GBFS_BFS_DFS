Greedy best First Search : 

1. It is used in Heuristic Search algorithm, where the goal is to quickly find a solution.

2. Web Page Ranking : In Search Engines, GBFS can be used to rank web page on their relevance to a search query, using heuristic like page content, links and user behavior.

3. Travel planning : When planning trips or vacations, GBFS can be used to priorities destinations or activities based on user preference and heuristic.

## Some Important  property of A* algorithm

Minimality : Super fast 

In GBFS has never backtracking , It always moves ahead towards goal node but not optimal.

It always use heuristic function.

# Negative : It is not optimal because it can lead to dead end.

# Admissible Path : When heuristic distance < Actual path distance

A* Algorithm:

1. Path Finding: A* is widely used in video games, robotics, and navigation systems to find the shortest path from one point to another on a map or grid while considering both the cost to reach a node and an estimate of the remaining cost (heuristic).

2. GPS Navigation: A* can be applied to calculate the optimal route for GPS navigation systems by considering factors like distance, traffic, and road conditions.

3. Network Routing: A* can be used in routing packets of data in computer networks to find the most efficient path from source to destination.

4. Puzzle Solving: A* can solve puzzles like the sliding tile puzzle and maze solving by finding the shortest path to the goal state.

## Optimal means : Shortest path (in terms of distance).

## Some Important  property of A* algorithm

Completeness : It covers the all cases

Optimality : Shortest path (In terms of distance). 

Negative : It has very high Space complexity.


In both cases, the choice between A* and Greedy Best-First Search depends on the specific problem and the trade-off between optimality and efficiency. A* guarantees an optimal solution, but it may be computationally expensive, while Greedy Best-First Search sacrifices optimality for speed and is often used in situations where a fast but suboptimal solution is acceptable.


Breadth First Search : 

1. It is blind Search.

2. It guarantees to be optimal (Without consider the weight). 

3. It is complete as well as optimal.

## Real life application of BFS

Applications of Breadth-First Search (BFS):

1. Shortest Path Finding: BFS is used in navigation and GPS systems to find the shortest path between two locations. It guarantees the shortest path in unweighted graphs.

2. Web Crawling: Search engines like Google use BFS to index web pages by starting from a seed page and exploring links level by level to discover new pages.

3. Social Networking: BFS can be applied to find the shortest path or connections between users in social networks, helping identify potential friends or contacts.


## Why BFS is more optimal than DFS ?
Ans : In BFS, if we find the node at level-n, We can be sure that it doesn't exist at particular levels or previous levels.
but in DFS , may or may not give shortest path.

### If we have to choose algorithm between BFS and DFS, totally depends on Domain specific.
In some cases of graph DFS could be faster than BFS.



Depth First Search :

1. It is blind Search.

2. It search the graph till full depth, if node doesn't get then backtracking.

## Real Life Application of Depth First Search

1. Graph Algorithms: DFS is a fundamental building block in various graph algorithms, including finding strongly connected components, topological sorting, and cycle detection.

2. Solving Constraint Satisfaction Problems: DFS can be used to solve problems where you need to find a combination of values that satisfies a set of constraints, such as the N-Queens problem.

3. Compiler Design: DFS can be used in compiler construction for tasks like syntax analysis, parsing, and code generation.

## Both DFS and BFS are used for graph traversing algorithm.













































